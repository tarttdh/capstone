[{"/mnt/c/pr0/connect/src/index.js":"1","/mnt/c/pr0/connect/src/App.js":"2","/mnt/c/pr0/connect/src/Frontend/components/userSearchProfile.js":"3","/mnt/c/pr0/connect/src/Frontend/components/ArticleDetails.js":"4","/mnt/c/pr0/connect/src/Frontend/Pages/Profile.js":"5","/mnt/c/pr0/connect/src/Frontend/Pages/AllCategories.js":"6","/mnt/c/pr0/connect/src/Frontend/Pages/About.js":"7","/mnt/c/pr0/connect/src/Frontend/Pages/logout.js":"8","/mnt/c/pr0/connect/src/Frontend/utils/editProfile.js":"9","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Broad.js":"10","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_macro.js":"11","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Pandemic.js":"12","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Russia.js":"13","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_company.js":"14","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_reports.js":"15","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Gov.js":"16","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_sustainability.js":"17","/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_micro.js":"18","/mnt/c/pr0/connect/src/Frontend/Pages/recent/company.js":"19","/mnt/c/pr0/connect/src/Frontend/Pages/recent/Russia.js":"20","/mnt/c/pr0/connect/src/Frontend/Pages/recent/Category_mac.js":"21","/mnt/c/pr0/connect/src/Frontend/Pages/recent/sustainability.js":"22","/mnt/c/pr0/connect/src/Frontend/Pages/recent/Broad.js":"23","/mnt/c/pr0/connect/src/Frontend/Pages/recent/micro.js":"24","/mnt/c/pr0/connect/src/Frontend/Pages/recent/reports.js":"25","/mnt/c/pr0/connect/src/Frontend/Pages/recent/Gov.js":"26","/mnt/c/pr0/connect/src/Frontend/Pages/recent/Pandemic.js":"27","/mnt/c/pr0/connect/src/config.js":"28","/mnt/c/pr0/connect/src/Frontend/components/NoteDetails.js":"29","/mnt/c/pr0/connect/src/Frontend/components/Pagination.js":"30","/mnt/c/pr0/connect/src/Frontend/utils/saveNoteCom.js":"31","/mnt/c/pr0/connect/src/Frontend/components/userSearchNotes.js":"32","/mnt/c/pr0/connect/src/Frontend/utils/searchUser.js":"33","/mnt/c/pr0/connect/src/Frontend/utils/saveNote.js":"34","/mnt/c/pr0/connect/src/Frontend/utils/deleteNote.js":"35"},{"size":613,"mtime":1680213997609,"results":"36","hashOfConfig":"37"},{"size":16342,"mtime":1680214838259,"results":"38","hashOfConfig":"37"},{"size":1777,"mtime":1680213997030,"results":"39","hashOfConfig":"37"},{"size":6268,"mtime":1680213996407,"results":"40","hashOfConfig":"37"},{"size":2844,"mtime":1680213995396,"results":"41","hashOfConfig":"37"},{"size":6651,"mtime":1680213995325,"results":"42","hashOfConfig":"37"},{"size":6791,"mtime":1680213995308,"results":"43","hashOfConfig":"37"},{"size":237,"mtime":1680213995811,"results":"44","hashOfConfig":"37"},{"size":1615,"mtime":1680213997219,"results":"45","hashOfConfig":"37"},{"size":6644,"mtime":1680213995563,"results":"46","hashOfConfig":"37"},{"size":6650,"mtime":1680213995731,"results":"47","hashOfConfig":"37"},{"size":6657,"mtime":1680213995657,"results":"48","hashOfConfig":"37"},{"size":6654,"mtime":1680213995691,"results":"49","hashOfConfig":"37"},{"size":6658,"mtime":1680213995712,"results":"50","hashOfConfig":"37"},{"size":6654,"mtime":1680213995768,"results":"51","hashOfConfig":"37"},{"size":6644,"mtime":1680213995627,"results":"52","hashOfConfig":"37"},{"size":6675,"mtime":1680213995789,"results":"53","hashOfConfig":"37"},{"size":6650,"mtime":1680213995750,"results":"54","hashOfConfig":"37"},{"size":6739,"mtime":1680213996174,"results":"55","hashOfConfig":"37"},{"size":6737,"mtime":1680213996115,"results":"56","hashOfConfig":"37"},{"size":6745,"mtime":1680213995934,"results":"57","hashOfConfig":"37"},{"size":6762,"mtime":1680213996341,"results":"58","hashOfConfig":"37"},{"size":6735,"mtime":1680213995882,"results":"59","hashOfConfig":"37"},{"size":6729,"mtime":1680213996227,"results":"60","hashOfConfig":"37"},{"size":6741,"mtime":1680213996279,"results":"61","hashOfConfig":"37"},{"size":6723,"mtime":1680213996004,"results":"62","hashOfConfig":"37"},{"size":6740,"mtime":1680213996063,"results":"63","hashOfConfig":"37"},{"size":61,"mtime":1680213997547,"results":"64","hashOfConfig":"37"},{"size":3577,"mtime":1680213996600,"results":"65","hashOfConfig":"37"},{"size":2688,"mtime":1680213996641,"results":"66","hashOfConfig":"37"},{"size":1007,"mtime":1680213997365,"results":"67","hashOfConfig":"37"},{"size":1444,"mtime":1680213996986,"results":"68","hashOfConfig":"37"},{"size":815,"mtime":1680213997454,"results":"69","hashOfConfig":"37"},{"size":966,"mtime":1680213997319,"results":"70","hashOfConfig":"37"},{"size":735,"mtime":1680213997177,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hsekm3",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/pr0/connect/src/index.js",[],[],"/mnt/c/pr0/connect/src/App.js",["185","186","187","188"],[],"import \"./App.css\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Profile from \"./Frontend/Pages/Profile\";\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Button from \"react-bootstrap/esm/Button\";\nimport \"./index.css\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { About } from \"./Frontend/Pages/About\";\nimport { AllCategories } from \"./Frontend/Pages/AllCategories\";\nimport ArticleDetails from \"./Frontend/components/ArticleDetails\";\nimport { Navbar } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport blankProfile from \"./Frontend/components/blankprofile.png\"\nimport UpdateUsername from \"./Frontend/utils/editProfile\";\nimport LogoutMessage from \"./Frontend/Pages/logout\"; \nimport SearchProfile from \"./Frontend/components/userSearchProfile\";\n\nimport ricon from \"./Frontend/components/ricon.png\"\nimport aicon from \"./Frontend/components/aicon.png\"\n\nimport ArcReports from \"./Frontend/Pages/archives/a_reports\";\nimport ArcBroad from \"./Frontend/Pages/archives/a_Broad\";\nimport ArcSustainability from \"./Frontend/Pages/archives/a_sustainability\";\nimport ArcCompany from \"./Frontend/Pages/archives/a_company\";\nimport ArcRussia from \"./Frontend/Pages/archives/a_Russia\";\nimport ArcGov from \"./Frontend/Pages/archives/a_Gov\";\nimport ArcMacro from \"./Frontend/Pages/archives/a_macro\";\nimport ArcMicro from \"./Frontend/Pages/archives/a_micro\";\nimport ArcPandemic from \"./Frontend/Pages/archives/a_Pandemic\";\n\n\nimport Categorymac from \"./Frontend/Pages/recent/Category_mac\";\nimport Reports from \"./Frontend/Pages/recent/reports\";\nimport Sustainability from \"./Frontend/Pages/recent/sustainability\";\nimport Broad from \"./Frontend/Pages/recent/Broad\";\nimport Company from \"./Frontend/Pages/recent/company\";\nimport Russia from \"./Frontend/Pages/recent/Russia\";\nimport Gov from \"./Frontend/Pages/recent/Gov\";\nimport Micro from \"./Frontend/Pages/recent/micro\";\nimport Pandemic from \"./Frontend/Pages/recent/Pandemic\";\n\n//changes were made\n\n\n\n\nfunction App() {\n\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n\n\n\n  // const handleSearch = () => {\n\n  //   if(searchTerm !== \"\"){\n    \n  //   }\n\n\n  //   // Do something with the searchTerm, such as pass it to an API call or update a search results component\n  //   console.log(searchTerm);\n  // //    searchUser(searchTerm).then((result) => {\n  // //   if (searchTerm) {\n\n  // //   }\n  // // });\n  \n  // };\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const { user, isLoading, isAuthenticated, logout, loginWithRedirect } = useAuth0();\n\n  \n  const [show, setShow] = useState(false);\n\n  const [showNav, setShowNav] = useState(false);\n\n  function toggleNav() {\n    console.log('Toggling nav');\n    setShowNav(!showNav);\n    setShowArc(false);\n  }\n  \n  function handleCloseNav() {\n    console.log('Closing nav');\n    setShowNav(false);\n    setShowArc(false);\n  }\n  \n  const [showArc, setShowArc] = useState(false);\n\n  function toggleArc() {\n    setShowArc(!showArc)\n    setShowNav(false);\n  }\n  \n  if (isLoading) return <div>Loading...</div>\n  \n  return (\n    <Router> \n         <head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Song+Myung\"></link>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Karma\"></link>\n        </head> \n          <header className=\"px-2 py-2 text-white bg-primary\">\n            <container className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\n              <ul className=\"nav col-lg-auto me-lg-auto align-items-center mb-md-0\">\n              <li className=\"px-1\"></li>\n                <li className=\"d-block d-sm-none col-12\">\n                <h3 as={Link} href={\"/\"} className=\"nav-link px-2 pb-0 text-white fs-5 text-center\">\n                    SupplyChainNews\n                  </h3>\n                </li>\n                <li className=\"d-none d-sm-block d-md-block align-items-center mb-0\">\n                <h3 as={Link} href={\"#\"} className=\"nav-link px-2 pb-0 text-white fs-5\">\n                    SupplyChainNews\n                  </h3>\n                </li>\n                <li className=\"fs-5 px-3 d-none d-sm-block d-md-block\">\n                  |\n                </li>\n                <li>\n                  <Link to=\"/\" className=\"nav-link px-2 text-white\">\n                    Home\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/About\" className=\"nav-link px-2 text-white\">\n                    About\n                  </Link>\n                </li>\n                <li>\n                  <Link to=\"/Profile\" className=\"nav-link px-2 text-white\">\n                    Profile\n                  </Link>\n                </li>\n                <li className=\"fs-5 px-3 d-none d-sm-block\">\n                  |\n                </li>\n                <li>\n                  <img className=\"mt-0 img-fluid\" style={{width: \"25px\", height: \"25px\"}} src={ricon} />\n                </li>\n                <li>\n                  <div onClick={toggleNav} className=\"btn px-0 text-white dropdown-toggle\">Recent</div>\n                </li>\n                <li className=\"px-2\"></li>\n                <li>\n                  <img className=\"mt-0 img-fluid\" style={{width: \"25px\", height: \"25px\"}} src={aicon} />\n                </li>\n                <li>\n                  <div onClick={toggleArc} className=\"btn px-0 text-white dropdown-toggle\">Archives</div>\n                </li>\n                </ul>\n              <ul class=\"nav col-lg-auto align-items-center mb-md-0 justify-content-right justify-content-center float-right\">\n              <li>\n              <div class=\"input-group\" className=\"\">\n                <ul className=\"nav\">\n                <li>\n                <input type=\"search\" placeholder=\"User Search\" aria-label=\"Search\" aria-describedby=\"search-addon\" className=\"form-control rounded justify-content-start\"  \n                value={searchTerm} onChange={handleInputChange} />\n                </li>\n                <li className=\"px-1\"></li>\n                <li>\n                <button type=\"button\" className=\"btn btn-outline-light me-2 justify-content-end btn-sm\"> \n                  <Link to=\"/SearchProfile\" className=\"nav-link px-2 text-white\">\n                    Search\n                  </Link> \n                </button>\n\n                </li>\n                <li className=\"py-sm-3 d-block d-sm-none\">\n                </li>\n                </ul>\n              </div>\n              </li>\n              <li className=\"nav align-items-center\">\n                {/* diplays userprofile is logged in  */}\n              <div className=\"text-center align-items-center justify-content-center\">\n                  {isAuthenticated && (\n                  <div className=\"nav align-items-center\">\n                    <ul className=\"nav align-items-center py-2\">\n                    <li>\n                    <img className=\"round-img\" style={{width: \"30px\", height: \"30px\", borderRadius: \"25px\"}} src={user.picture} alt={user.name}\n                    onError={(e) => {\n                      e.target.onerror = null;\n                      e.target.src = blankProfile;\n                    }}/>\n                    </li>\n                    <li className=\"nav align-items-center justify-content-center flex\">\n                    <p className=\"px-1 nav align-items-center justify-content-center flex\">Welcome {user.name}!</p>\n                    </li>\n                    </ul>\n                   </div>\n                  )}\n              </div>\n              </li>\n              <li className=\"px-2\"></li>\n              <li>\n              </li>\n              <li>\n              <div className=\"text-end pb-sm-0 pb-2 pl-sm-0 pl-1 justify-content-end justify-content-end right-0\">\n                {isAuthenticated === false?(\n              <Button className=\"btn bg-primary btn-bg-primary btn-outline-light me-2\" onClick={() => loginWithRedirect()}>\n                  Login\n                </Button>\n                ): (\n                <Button className=\"btn bg-primary btn-outline-light me-2\" onClick={() => logout() }>\n                  Logout\n                </Button>\n                )}\n              </div>\n              </li>\n              </ul>\n            </container>\n        </header>\n          {showNav && (\n            <div className=\"d-block d-sm-none\">\n            <Navbar className=\"dropdown-custom-r py-0 bg-secondary inset-shadow flex-column\" >\n              <div onClick={toggleNav} className=\"small-caps btn px-3 text-white\">Recent</div>\n              <div className= \"text-white bold\" > </div>\n              \n                <Nav.Link as={Link} to={\"/micro\"} className=\"text-white\" onClick={handleCloseNav} >micro</Nav.Link>\n                <Nav.Link as={Link} to={\"/macro\"} className=\"text-white \" onClick={handleCloseNav}>macro</Nav.Link>\n                <Nav.Link as={Link} to={\"/company_activity\"} className=\"text-white\" onClick={handleCloseNav}>Company Activity</Nav.Link>\n                <Nav.Link as={Link} to={\"/sustainability\"} className=\"text-white\" onClick={handleCloseNav}>Sustainability</Nav.Link>\n                <Nav.Link as={Link} to={\"/Reports\"} className=\"text-white\" onClick={handleCloseNav}>Reports</Nav.Link>\n                <Nav.Link as={Link} to={\"/Russia/Ukraine\"} className=\"text-white\" onClick={handleCloseNav}>Russia/Ukraine</Nav.Link>\n                <Nav.Link as={Link} to={\"/Pandemic\"} className=\"text-white\" onClick={handleCloseNav}>Pandemic</Nav.Link>\n                <Nav.Link as={Link} to={\"/Gov\"} className=\"text-white\" onClick={handleCloseNav}>Gov</Nav.Link>\n                <Nav.Link as={Link} to={\"/Broad_SCIM_Trends\"} className=\"text-white\" onClick={handleCloseNav}>Broad SCIM Trends</Nav.Link>\n              </Navbar>\n            </div>\n          )}\n          {showNav && (\n               <div className=\"d-none d-sm-block d-md-block\">\n               <Navbar className=\"dropdown-custom-r py-0 bg-secondary inset-shadow\">\n                 <div onClick={toggleNav} className=\"small-caps btn px-3 text-white\">Recent</div>\n                 <div className= \"text-white bold\">  </div>  \n                <Nav.Link as={Link} to={\"/micro\"} className=\"text-white\" onClick={handleCloseNav}>micro</Nav.Link>\n                <Nav.Link as={Link} to={\"/macro\"} className=\"text-white\" onClick={handleCloseNav}>macro</Nav.Link>\n                <Nav.Link as={Link} to={\"/company_activity\"} className=\"text-white\" onClick={handleCloseNav}>Company Activity</Nav.Link>\n                <Nav.Link as={Link} to={\"/sustainability\"} className=\"text-white\" onClick={handleCloseNav}>Sustainability</Nav.Link>\n                <Nav.Link as={Link} to={\"/Reports\"} className=\"text-white\" onClick={handleCloseNav}>Reports</Nav.Link>\n                <Nav.Link as={Link} to={\"/Russia/Ukraine\"} className=\"text-white\" onClick={handleCloseNav}>Russia/Ukraine</Nav.Link>\n                <Nav.Link as={Link} to={\"/Pandemic\"} className=\"text-white\" onClick={handleCloseNav}>Pandemic</Nav.Link>\n                <Nav.Link as={Link} to={\"/Gov\"} className=\"text-white\" onClick={handleCloseNav}>Gov</Nav.Link>\n                <Nav.Link as={Link} to={\"/Broad_SCIM_Trends\"} className=\"text-white\" onClick={handleCloseNav}>Broad SCIM Trends</Nav.Link>\n              </Navbar>\n            </div>\n          )}\n\n          \n          \n          {showArc && (\n           <div className=\"d-block d-sm-none\">\n           <Navbar className=\"dropdown-custom-a py-0 bg-secondary inset-shadow flex-column\">\n             <div onClick={toggleArc} className=\"small-caps btn px-3 text-white\">Archives</div>\n             <div className= \"text-white bold\">  </div> \n                <Nav.Link as={Link} to={\"/arc_micro\"} className=\"text-white\" onClick={handleCloseNav}>Micro</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_macro\"} className=\"text-white\" onClick={handleCloseNav}>Macro</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_company_activity\"} className=\"text-white\" onClick={handleCloseNav}>Company Activity</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_sustainability\"} className=\"text-white\" onClick={handleCloseNav}>Sustainability</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Reports\"} className=\"text-white\" onClick={handleCloseNav}>Reports</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Russia/Ukraine\"} className=\"text-white\" onClick={handleCloseNav}>Russia/Ukraine</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Pandemic\"} className=\"text-white\" onClick={handleCloseNav}>Pandemic</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Gov\"} className=\"text-white\" onClick={handleCloseNav}>Gov</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Broad_SCIM_Trends\"} className=\"text-white\" onClick={handleCloseNav}>Broad Scrim Trends</Nav.Link>\n              </Navbar>\n            </div>\n          )}\n          {showArc && (\n            <div className=\"d-none d-sm-block d-md-block\">\n            <Navbar className=\"dropdown-custom-a py-0 bg-secondary inset-shadow\">\n              <div onClick={toggleArc} className=\"small-caps btn px-3 text-white\">Archives</div>\n              <div className= \"text-white bold\"></div>\n                <Nav.Link as={Link} to={\"/arc_micro\"} className=\"text-white\" onClick={handleCloseNav}>Micro</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_macro\"} className=\"text-white\" onClick={handleCloseNav}>Macro</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_company_activity\"} className=\"text-white\" onClick={handleCloseNav}>Company Activity</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_sustainability\"} className=\"text-white\" onClick={handleCloseNav}>Sustainability</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Reports\"} className=\"text-white\" onClick={handleCloseNav}>Reports</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Russia/Ukraine\"} className=\"text-white\" onClick={handleCloseNav}>Russia/Ukraine</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Pandemic\"} className=\"text-white\" onClick={handleCloseNav}>Pandemic</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Gov\"} className=\"text-white\" onClick={handleCloseNav}>Gov</Nav.Link>\n                <Nav.Link as={Link} to={\"/arc_Broad_SCIM_Trends\"} className=\"text-white\" onClick={handleCloseNav}>Broad Scim Trends</Nav.Link>\n              </Navbar>\n            </div>\n          )}\n        <Routes>\n          <Route path=\"/logout\" element={<LogoutMessage />} />\n          <Route path=\"/\" element={<AllCategories />} />\n          <Route path=\"/About\" element={<About />} />\n          <Route path=\"/Profile\" element={<Profile />} />\n          <Route path=\"/Home/details\" element={<ArticleDetails />} />\n          <Route path=\"/edit_Profile\" element={<UpdateUsername />} />\n          <Route path=\"/SearchProfile\" element= {<SearchProfile searchTerm={searchTerm} />} />\n\n\n          {/* Archived Routes */}\n        \n          <Route path=\"/arc_reports\" element={<ArcReports />} />\n          <Route path=\"/arc_Broad_SCIM_Trends\" element={<ArcBroad />} />\n          <Route path=\"/arc_sustainability\" element={<ArcSustainability />} />\n          <Route path=\"/arc_company_activity\" element={<ArcCompany />} />\n          <Route path=\"/arc_Russia/Ukraine\" element={<ArcRussia />} />\n          <Route path=\"/arc_Pandemic\" element={<ArcPandemic />} />\n          <Route path=\"/arc_Gov\" element={<ArcGov />} />\n          <Route path=\"/arc_macro\" element={<ArcMacro />} />\n          <Route path=\"/arc_micro\" element={<ArcMicro />} />\n\n            {/* Recent Routes */}\n\n          <Route path=\"/reports\" element={<Reports />} />\n          <Route path=\"/sustainability\" element={<Sustainability />} />\n          <Route path=\"/Broad_SCIM_Trends\" element={<Broad />} />\n          <Route path=\"/company_activity\" element={<Company />} />\n          <Route path=\"/Russia/Ukraine\" element={<Russia />} />\n          <Route path=\"/Pandemic\" element={<Pandemic />} />\n          <Route path=\"/Gov\" element={<Gov />} />\n          <Route path=\"/macro\" element={<Categorymac />} />\n          <Route path=\"/micro\" element={<Micro />} />\n          \n\n          \n          {/* <Route path= \"/Home/details\" element={<ArticleDetails />} /> */}\n\n\n        </Routes>\n    </Router>\n  );\n}\n\n\nexport default App;\n","/mnt/c/pr0/connect/src/Frontend/components/userSearchProfile.js",["189","190","191","192"],[],"import React, { useState } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\nimport searchUser from '../utils/searchUser';\r\nimport Note from './userSearchNotes';\r\n\r\nconst SearchProfile = (props) => {\r\n\r\n\r\n  console.log(\"searchProfileProps \", props)\r\n\r\n  const [responseData, setResponseData] = useState()\r\n    \r\n  let _userData;\r\n  \r\n  searchUser(props.searchTerm).then((result) => {\r\n    console.log(\"Results\", result)\r\n    _userData = result;\r\n    setResponseData(result);\r\n  })\r\n\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n\r\n      {responseData &&\r\n       <img src={responseData.picture} />}\r\n\r\n        {responseData &&\r\n       <p>Email: {responseData.email}</p>}\r\n      \r\n        {responseData && responseData.savedNotes ? (\r\n          responseData.savedNotes.map((note) => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\",\r\n\r\n              }}\r\n              onClick={() => openFullNote(note.id)}\r\n              >\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              <Card.Footer \r\n              key={note.id}\r\n              >\r\n              {openNote !== note.id ? (\r\n                  \"\"\r\n                ) : (\r\n                  <Note note={note} className=\"popupModal\" />\r\n                )}\r\n              </Card.Footer>\r\n              \r\n            </Card>\r\n        \r\n          ))\r\n        ) : (\r\n          \"No saved notes\"\r\n        )}\r\n        \r\n      \r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProfile;\r\n","/mnt/c/pr0/connect/src/Frontend/components/ArticleDetails.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/Profile.js",["193","194"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"../components/NoteDetails\";\r\nimport { Nav } from 'react-bootstrap';\r\nimport { serverUrl } from '../../config';\r\n\r\n\r\nconst Profile = () => {\r\n\r\n\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n\r\n  const fetchData = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n\r\n    var raw = JSON.stringify({\r\n      \"email\": `${user.email}`\r\n    });\r\n\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n\r\n    try {\r\n      const response = await fetch(`${serverUrl}/user/`, requestOptions);\r\n      const result = await response.json();\r\n      setResponseData(result);\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      setResponseData(null);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Please log in to see your profile information.</div>;\r\n  }\r\n\r\n\r\n  return responseData ? (\r\n    <div>\r\n      <header className=\"text-center\">\r\n        <Nav className=\"mx-auto col-6 justify-content-end\">\r\n          <Nav.Link className=\"text-primary\" href=\"/edit_profile\">Edit Profile</Nav.Link>\r\n        </Nav>\r\n      </header>\r\n      <div className=\"col-3 inset-shadow bg-secondary\"></div>\r\n      <main className=\"mx-auto col-6 text-center\">\r\n        <img className=\"round-img\" style={{width: \"130px\", height: \"130px\", borderRadius: \"125px\"}} src={responseData.picture} alt=\"Profile Picture\" />\r\n        <h4 className=\"mb-0 mt-3 prof-title\">{responseData.name}</h4>\r\n        <p className=\"mb-3 mt-0\">{responseData.email}</p>\r\n        {responseData.savedNotes\r\n          ? responseData.savedNotes.map(note => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\"\r\n              }}\r\n              key={note.id}\r\n            >\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              <Button\r\n                variant=\"primary\"\r\n                \r\n                onClick={() => openFullNote(note.id)}\r\n              >\r\n                {openNote !== note.id ? \"open Note\" : <NoteDetails note={note} className=\"popupModal\" />}\r\n              </Button>\r\n            </Card>\r\n          ))\r\n          : \"No saved articles.\"}\r\n      </main>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n\r\n\r\nexport default Profile;\r\n\r\n\r\n","/mnt/c/pr0/connect/src/Frontend/Pages/AllCategories.js",["195"],[],"import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from \"../components/Image.jpg\";\r\nimport \"../components/test-card.css\";\r\nimport ArticleDetails from '../components/ArticleDetails';\r\nimport Pagination from '../components/Pagination';\r\nimport { serverUrl } from \"../../config.js\";\r\nimport \"../../Animations/airplane.css\"\r\n\r\nexport class AllCategories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      articles: [],\r\n      openArticle: -1,\r\n      selectArticle: -1,\r\n      currentPage: 1\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${serverUrl}/articles/?format=json`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          // Sort the articles by date in descending order\r\n          result.sort((a, b) => new Date(b.Date) - new Date(a.Date));\r\n          this.setState({\r\n            isLoaded: true,\r\n            articles: result, \r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n\r\n     \r\n\r\n    const { error, isLoaded, articles, selectArticle, openArticle, currentPage, selectButton } = this.state;\r\n    const articlesPerPage = 12; // number of articles to display per page\r\n\r\n    const truncate = (input) =>\r\n      input?.length > 300 ? `${input.substring(0, 254)}...` : input;\r\n\r\n    const openFullArticle = (id) =>\r\n      this.setState({\r\n        openArticle: id\r\n      });\r\n\r\n    const selectedArticle = (id) =>\r\n      this.setState({\r\n        selectArticle: id\r\n      });\r\n\r\n  \r\n\r\n    const indexOfLastArticle = currentPage * articlesPerPage;\r\n    const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\r\n    const currentArticles = articles.slice(indexOfFirstArticle, indexOfLastArticle);\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n      this.setState({\r\n        currentPage: pageNumber\r\n      });\r\n    };\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n       <div class=\"airplane\">\r\n        <img src=\"https://i.ibb.co/SPpRcJz/airplane.png\" />\r\n      <div class=\"smoke\"></div>\r\n      <div class=\"flame\"></div>\r\n      <div class=\"flame flame2\"></div>\r\n      </div>\r\n        <div>\r\n          <Container>\r\n            <Row>\r\n              <div className=\"card-column mt-3 test-cards\">\r\n                {currentArticles.map((article) => (\r\n                  <Card\r\n                    className=\"cards test-card\"\r\n                    style={{\r\n                      width: \"20rem\",\r\n                      minheight: \"25px\",\r\n                      cursor: 'pointer'\r\n                    }}\r\n                    key={article.index}\r\n                  >\r\n                    { <Card.Img style ={{height: \"200px\"}} variant=\"top\" src={article.Image ? article.Image : Image} className=\"img-fluid\" alt=\"Responsive image\" \r\n                    onClick={() =>{selectedArticle(article._id)}} /> }\r\n                    <Card.Body>\r\n                      <Card.Title \r\n                    onClick={() =>{selectedArticle(article._id)}} >\r\n                      {article.Title}\r\n                      </Card.Title>\r\n                      <Card.Text\r\n                        style={{\r\n                          cursor: 'pointer'\r\n                        }}\r\n                      >\r\n                        <p onClick={() => {openFullArticle(article._id)}} >\r\n                          {openArticle !== article._id? truncate(article.Summary): article.Summary}\r\n                        </p>\r\n                      </Card.Text>\r\n                    </Card.Body >\r\n                    <ListGroup className=\"list-group-flush\" \r\n                     >\r\n                     {selectArticle !== article._id? '':\r\n                       <ArticleDetails article={article} className=\"popupModal\"/>\r\n                     }\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >Written by:  {article.Author || 'none'}</ListGroup.Item>\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >Read Time: {article.Read_Time} min</ListGroup.Item>\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >Date: {article.Date ? article.Date : 'NA'}</ListGroup.Item>\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >\r\n                      <div style={{textAlign: 'center'}}>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        style={{\r\n                          border: \"darkgreen 1px solid\",\r\n                        }}\r\n                        onClick={() =>{selectedArticle(article._id)}} >Read More\r\n                        {selectButton !== article._id? '': \r\n                          <ArticleDetails article={article} className=\"popupModal\" />\r\n                          \r\n                        } \r\n                      </Button> \r\n                      </div>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                    {/* <Card.Body className= \"card-actions\">\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        style={{\r\n                          backgroundColor: \"darkgreen\",\r\n                          border: \"darkgreen 1px solid\",\r\n                        }}\r\n                        onClick={() =>{selectedArticle(article._id)} }>\r\n                        {selectArticle !== article._id? 'Read More':\r\n                          <ArticleDetails article={article} className=\"popupModal\"/>\r\n                        } \r\n                      </Button> \r\n                      <Card.Link to={article.URL} className= \"card-link\" href={article.URL} target= \"_blank\">Link to article</Card.Link>\r\n                      </Card.Body> */}\r\n                   </Card> \r\n                ))}\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={handlePageChange}\r\n            totalArticles={articles.length}\r\n            articlesPerPage={articlesPerPage}\r\n          />\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n     \r\n  }\r\n}\r\n\r\nexport default AllCategories;\r\n","/mnt/c/pr0/connect/src/Frontend/Pages/About.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/logout.js",[],[],"/mnt/c/pr0/connect/src/Frontend/utils/editProfile.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Broad.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_macro.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Pandemic.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Russia.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_company.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_reports.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_Gov.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_sustainability.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/archives/a_micro.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/company.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/Russia.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/Category_mac.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/sustainability.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/Broad.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/micro.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/reports.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/Gov.js",[],[],"/mnt/c/pr0/connect/src/Frontend/Pages/recent/Pandemic.js",[],[],"/mnt/c/pr0/connect/src/config.js",[],[],"/mnt/c/pr0/connect/src/Frontend/components/NoteDetails.js",[],[],"/mnt/c/pr0/connect/src/Frontend/components/Pagination.js",["196","197"],[],"import React, { useState } from 'react';\r\nimport { Card, Button, Form, Row, Col } from 'react-bootstrap';\r\n\r\nconst Pagination = (props) => {\r\n  // destructuring the currentPage and setCurrentPage from the props\r\n  const { currentPage, setCurrentPage } = props;\r\n\r\n  // logic for changing the current page\r\n  const handleClick = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // logic for displaying the page numbers\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(props.totalArticles / props.articlesPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const [searchPage, setSearchPage] = useState(\"\");\r\n\r\n  const handleSearch = (event) => {\r\n    event.preventDefault();\r\n    const searchResult = parseInt(searchPage);\r\n    if (searchResult >= 1 && searchResult <= pageNumbers.length) {\r\n      handleClick(searchResult);\r\n    }\r\n    setSearchPage(\"\");\r\n  }\r\n\r\n  // const renderPageNumbers = pageNumbers.map((number) => {\r\n  //   return (\r\n  //     <Button\r\n  //       variant={number === currentPage ? 'primary' : 'secondary'}\r\n  //       key={number}\r\n  //       id={number}\r\n  //       onClick={() => handleClick(number)}\r\n  //     >\r\n  //       {number}\r\n  //     </Button>\r\n  //   );\r\n  // });\r\n\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <Card.Body>\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={currentPage === 1}\r\n            onClick={() => handleClick(currentPage - 1)}\r\n          >\r\n            Previous\r\n          </Button>\r\n          <div className=\"d-flex flex-column align-items-center\">\r\n            <h5>{`Page ${currentPage} of ${pageNumbers.length}`}</h5>\r\n            <Form className=\"d-flex\" onSubmit={handleSearch}>\r\n              <Form.Group controlId=\"formSearchPage\" className=\"mb-0\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  min=\"1\"\r\n                  max={pageNumbers.length}\r\n                  value={searchPage}\r\n                  onChange={(event) => setSearchPage(event.target.value)}\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"ml-2\">\r\n                Go\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          <Button\r\n            variant=\"primary\"\r\n            disabled={currentPage === pageNumbers.length}\r\n            onClick={() => handleClick(currentPage + 1)}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <div className=\"my-3\">\r\n          {/* {renderPageNumbers} */}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","/mnt/c/pr0/connect/src/Frontend/utils/saveNoteCom.js",["198","199"],[],"import React, { useState } from 'react';\r\nimport { serverUrl } from \"../../config.js\";\r\n\r\nconst saveNoteCom = (email, note, articleTitle, URL ) => {\r\n    console.log(note)\r\n    console.log(email)\r\n    console.log(articleTitle)\r\n    console.log(URL)\r\n    \r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, note, articleTitle, URL })\r\n    };\r\n  \r\n    return fetch(`${serverUrl}/save_note/`, requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => console.log(data))\r\n      .catch(error => console.error(error));\r\n  };\r\n      \r\n\r\n  \r\n  \r\nexport default saveNoteCom;\r\n//NOw here you have to post the url into the user's database for the logged in user \r\n// if user is Authenticated then save url to user.profile \r\n// API should update(PUT) url in a new url colomn \r\n","/mnt/c/pr0/connect/src/Frontend/components/userSearchNotes.js",[],[],"/mnt/c/pr0/connect/src/Frontend/utils/searchUser.js",["200"],[],"import SearchProfile from \"../components/userSearchProfile\";\r\nimport { serverUrl } from \"../../config.js\";\r\n\r\nconst searchUser = async (email) => {\r\n    console.log(email);\r\n    const myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n  \r\n    const raw = JSON.stringify({\r\n      \"email\": email\r\n    });\r\n  \r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n  \r\n    try {\r\n      const response = await fetch(`${serverUrl}/user/`, requestOptions);\r\n      const result = await response.json();\r\n      console.log(result)\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.log('error', error);\r\n      console.log(null)\r\n      return null;\r\n    }\r\n  };\r\n\r\n  export default searchUser;","/mnt/c/pr0/connect/src/Frontend/utils/saveNote.js",["201","202"],[],"import React, { useState } from 'react';\r\nimport { serverUrl } from \"../../config.js\";\r\n\r\nconst saveNote = (email, articleTitle, URL ) => {\r\n    console.log(email)\r\n    console.log(articleTitle)\r\n    console.log(URL)\r\n    \r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ email, articleTitle, URL })\r\n    };\r\n  \r\n    return fetch(`${serverUrl}/save_note/`, requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => console.log(data))\r\n      .catch(error => console.error(error));\r\n  };\r\n      \r\n\r\n  \r\n  \r\nexport default saveNote;\r\n//NOw here you have to post the url into the user's database for the logged in user \r\n// if user is Authenticated then save url to user.profile \r\n// API should update(PUT) url in a new url colomn \r\n","/mnt/c/pr0/connect/src/Frontend/utils/deleteNote.js",[],[],{"ruleId":"203","severity":1,"message":"204","line":79,"column":10,"nodeType":"205","messageId":"206","endLine":79,"endColumn":14},{"ruleId":"203","severity":1,"message":"207","line":79,"column":16,"nodeType":"205","messageId":"206","endLine":79,"endColumn":23},{"ruleId":"208","severity":1,"message":"209","line":146,"column":19,"nodeType":"210","endLine":146,"endColumn":105},{"ruleId":"208","severity":1,"message":"209","line":153,"column":19,"nodeType":"210","endLine":153,"endColumn":105},{"ruleId":"203","severity":1,"message":"211","line":3,"column":8,"nodeType":"205","messageId":"206","endLine":3,"endColumn":14},{"ruleId":"203","severity":1,"message":"212","line":4,"column":8,"nodeType":"205","messageId":"206","endLine":4,"endColumn":19},{"ruleId":"203","severity":1,"message":"213","line":15,"column":7,"nodeType":"205","messageId":"206","endLine":15,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":36,"column":8,"nodeType":"210","endLine":36,"endColumn":42},{"ruleId":"214","severity":1,"message":"215","line":56,"column":6,"nodeType":"216","endLine":56,"endColumn":8,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":73,"column":9,"nodeType":"210","endLine":73,"endColumn":152},{"ruleId":"208","severity":1,"message":"209","line":89,"column":9,"nodeType":"210","endLine":89,"endColumn":60},{"ruleId":"203","severity":1,"message":"220","line":2,"column":30,"nodeType":"205","messageId":"206","endLine":2,"endColumn":33},{"ruleId":"203","severity":1,"message":"221","line":2,"column":35,"nodeType":"205","messageId":"206","endLine":2,"endColumn":38},{"ruleId":"203","severity":1,"message":"222","line":1,"column":8,"nodeType":"205","messageId":"206","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"223","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":25},{"ruleId":"203","severity":1,"message":"224","line":1,"column":8,"nodeType":"205","messageId":"206","endLine":1,"endColumn":21},{"ruleId":"203","severity":1,"message":"222","line":1,"column":8,"nodeType":"205","messageId":"206","endLine":1,"endColumn":13},{"ruleId":"203","severity":1,"message":"223","line":1,"column":17,"nodeType":"205","messageId":"206","endLine":1,"endColumn":25},"no-unused-vars","'show' is assigned a value but never used.","Identifier","unusedVar","'setShow' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'NoteDetails' is defined but never used.","'_userData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["225"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Row' is defined but never used.","'Col' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'SearchProfile' is defined but never used.",{"desc":"226","fix":"227"},"Update the dependencies array to be: [fetchData]",{"range":"228","text":"229"},[1249,1251],"[fetchData]"]