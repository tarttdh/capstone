{"ast":null,"code":"import _asyncToGenerator from\"/mnt/c/capstone/connect/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/mnt/c/capstone/connect/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/mnt/c/capstone/connect/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from'react';import{useAuth0}from'@auth0/auth0-react';import Card from\"react-bootstrap/Card\";import Button from\"react-bootstrap/Button\";import NoteDetails from\"./NoteDetails\";import{serverUrl}from\"../config.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Profile=function Profile(){var _useAuth=useAuth0(),user=_useAuth.user,isAuthenticated=_useAuth.isAuthenticated;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),responseData=_useState2[0],setResponseData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),openNote=_useState4[0],setOpenNote=_useState4[1];var openFullNote=function openFullNote(id){setOpenNote(id);};var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var myHeaders,raw,requestOptions,response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:myHeaders=new Headers();myHeaders.append(\"Content-Type\",\"application/json\");raw=JSON.stringify({\"email\":\"\".concat(user.email)});requestOptions={method:'POST',headers:myHeaders,body:raw,redirect:'follow'};_context.prev=4;_context.next=7;return fetch(\"\".concat(serverUrl,\"/user/\"),requestOptions);case 7:response=_context.sent;_context.next=10;return response.json();case 10:result=_context.sent;setResponseData(result);_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](4);console.log('error',_context.t0);setResponseData(null);case 18:case\"end\":return _context.stop();}}},_callee,null,[[4,14]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();useEffect(function(){fetchData();},[]);if(!isAuthenticated){return/*#__PURE__*/_jsx(\"div\",{children:\"Please log in to see your profile information.\"});}return responseData?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/edit_profile\",children:\"Edit Profile\"})})})})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"img\",{src:responseData.picture,alt:\"Profile Picture\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",responseData.email]}),responseData.savedNotes?responseData.savedNotes.map(function(note){return/*#__PURE__*/_jsxs(Card,{className:\"cards test-card\",style:{width:\"20rem\",minheight:\"25px\"},onClick:function onClick(){return openFullNote(note.id);},children:[/*#__PURE__*/_jsx(Card.Title,{onClick:function onClick(){return openFullNote(note.id);},children:note.articleTitle}),/*#__PURE__*/_jsx(Card.Footer,{children:openNote!==note.id?\"\":/*#__PURE__*/_jsx(NoteDetails,{note:note,className:\"popupModal\"})})]},note.id);}):\"No saved saved Articles\"]})]}):/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});};export default Profile;","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/components/Profile.js"],"names":["React","useState","useEffect","useAuth0","Card","Button","NoteDetails","serverUrl","Profile","user","isAuthenticated","responseData","setResponseData","openNote","setOpenNote","openFullNote","id","fetchData","myHeaders","Headers","append","raw","JSON","stringify","email","requestOptions","method","headers","body","redirect","fetch","response","json","result","console","log","picture","savedNotes","map","note","width","minheight","articleTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\nimport { serverUrl } from \"../config.js\";\r\n\r\nconst Profile = () => {\r\n\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      \"email\": `${user.email}`\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${serverUrl}/user/`, requestOptions);\r\n      const result = await response.json();\r\n      setResponseData(result);\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      setResponseData(null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Please log in to see your profile information.</div>;\r\n  }\r\n\r\n  return responseData ? (\r\n    <div>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"/edit_profile\">Edit Profile</a></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <img src={responseData.picture} alt=\"Profile Picture\" />\r\n        <p>Email: {responseData.email}</p>\r\n        {responseData.savedNotes\r\n          ? responseData.savedNotes.map(note => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\"\r\n              }}\r\n              key={note.id}\r\n              onClick={() => openFullNote(note.id)}\r\n            >\r\n              <Card.Title onClick={() => openFullNote(note.id)}>{note.articleTitle}</Card.Title>\r\n              {/* <Button\r\n                variant=\"primary\"\r\n                style={{\r\n                  backgroundColor: \"darkgreen\",\r\n                  border: \"darkgreen 1px solid\",\r\n                }}\r\n                onClick={() => openFullNote(note.id)}\r\n              >\r\n                {openNote !== note.id ? \"open Note\" : <NoteDetails note={note} className=\"popupModal\" />}\r\n              </Button> */}\r\n              <Card.Footer>\r\n               {openNote !== note.id ? \"\" : <NoteDetails note={note} className=\"popupModal\" />}\r\n               </Card.Footer>\r\n            </Card>\r\n          ))\r\n          : \"No saved saved Articles\"}\r\n      </main>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}