{"ast":null,"code":"var _jsxFileName = \"/mnt/c/capstone/connect/src/Frontend/Pages/AllCategories.js\";\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from \"./Frontend/components/Image.jpg\";\nimport \"./components/test-card.css\";\nimport ArticleDetails from './components/ArticleDetails';\nimport Pagination from './components/Pagination';\nimport { serverUrl } from \"../../config.js\";\nimport \"./airplane.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AllCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      articles: [],\n      openArticle: -1,\n      selectArticle: -1,\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    fetch(`${serverUrl}/articles/?format=json`).then(res => res.json()).then(result => {\n      // Sort the articles by date in descending order\n      result.sort((a, b) => new Date(b.Date) - new Date(a.Date));\n      this.setState({\n        isLoaded: true,\n        articles: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      articles,\n      selectArticle,\n      openArticle,\n      currentPage,\n      selectButton\n    } = this.state;\n    const articlesPerPage = 12; // number of articles to display per page\n\n    const truncate = input => (input === null || input === void 0 ? void 0 : input.length) > 300 ? `${input.substring(0, 254)}...` : input;\n\n    const openFullArticle = id => this.setState({\n      openArticle: id\n    });\n\n    const selectedArticle = id => this.setState({\n      selectArticle: id\n    });\n\n    const indexOfLastArticle = currentPage * articlesPerPage;\n    const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\n    const currentArticles = articles.slice(indexOfFirstArticle, indexOfLastArticle);\n\n    const handlePageChange = pageNumber => {\n      this.setState({\n        currentPage: pageNumber\n      });\n    };\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"airplane\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://i.ibb.co/SPpRcJz/airplane.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"smoke\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flame\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"flame flame2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-column mt-3 test-cards\",\n                children: currentArticles.map(article => /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"cards test-card\",\n                  style: {\n                    width: \"20rem\",\n                    minheight: \"25px\",\n                    cursor: 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                    style: {\n                      height: \"200px\"\n                    },\n                    variant: \"top\",\n                    src: article.Image ? article.Image : Image,\n                    className: \"img-fluid\",\n                    alt: \"Responsive image\",\n                    onClick: () => {\n                      selectedArticle(article._id);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      onClick: () => {\n                        selectedArticle(article._id);\n                      },\n                      children: article.Title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                      style: {\n                        cursor: 'pointer'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        onClick: () => {\n                          openFullArticle(article._id);\n                        },\n                        children: openArticle !== article._id ? truncate(article.Summary) : article.Summary\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                    className: \"list-group-flush\",\n                    children: [selectArticle !== article._id ? '' : /*#__PURE__*/_jsxDEV(ArticleDetails, {\n                      article: article,\n                      className: \"popupModal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 24\n                    }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      onClick: () => {\n                        selectedArticle(article._id);\n                      },\n                      children: [\"Written by:  \", article.Author || 'none']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      onClick: () => {\n                        selectedArticle(article._id);\n                      },\n                      children: [\"Read Time: \", article.Read_Time, \" min\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      onClick: () => {\n                        selectedArticle(article._id);\n                      },\n                      children: [\"Date: \", article.Date ? article.Date : 'NA']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 132,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                      onClick: () => {\n                        selectedArticle(article._id);\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          textAlign: 'center'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"primary\",\n                          style: {\n                            backgroundColor: \"darkgreen\",\n                            border: \"darkgreen 1px solid\"\n                          },\n                          onClick: () => {\n                            selectedArticle(article._id);\n                          },\n                          children: [\"Read More\", selectButton !== article._id ? '' : /*#__PURE__*/_jsxDEV(ArticleDetails, {\n                            article: article,\n                            className: \"popupModal\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 143,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this)]\n                }, article.index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n            currentPage: currentPage,\n            setCurrentPage: handlePageChange,\n            totalArticles: articles.length,\n            articlesPerPage: articlesPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\nexport default AllCategories;","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/Frontend/Pages/AllCategories.js"],"names":["React","Component","Card","Button","Container","Row","ListGroup","Image","ArticleDetails","Pagination","serverUrl","AllCategories","constructor","props","state","error","isLoaded","articles","openArticle","selectArticle","currentPage","componentDidMount","fetch","then","res","json","result","sort","a","b","Date","setState","render","selectButton","articlesPerPage","truncate","input","length","substring","openFullArticle","id","selectedArticle","indexOfLastArticle","indexOfFirstArticle","currentArticles","slice","handlePageChange","pageNumber","message","map","article","width","minheight","cursor","height","_id","Title","Summary","Author","Read_Time","textAlign","backgroundColor","border","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from \"./Frontend/components/Image.jpg\";\r\nimport \"./components/test-card.css\";\r\nimport ArticleDetails from './components/ArticleDetails';\r\nimport Pagination from './components/Pagination';\r\nimport { serverUrl } from \"../../config.js\";\r\nimport \"./airplane.css\"\r\n\r\nexport class AllCategories extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      articles: [],\r\n      openArticle: -1,\r\n      selectArticle: -1,\r\n      currentPage: 1\r\n      \r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${serverUrl}/articles/?format=json`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          // Sort the articles by date in descending order\r\n          result.sort((a, b) => new Date(b.Date) - new Date(a.Date));\r\n          this.setState({\r\n            isLoaded: true,\r\n            articles: result, \r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n\r\n     \r\n\r\n    const { error, isLoaded, articles, selectArticle, openArticle, currentPage, selectButton } = this.state;\r\n    const articlesPerPage = 12; // number of articles to display per page\r\n\r\n    const truncate = (input) =>\r\n      input?.length > 300 ? `${input.substring(0, 254)}...` : input;\r\n\r\n    const openFullArticle = (id) =>\r\n      this.setState({\r\n        openArticle: id\r\n      });\r\n\r\n    const selectedArticle = (id) =>\r\n      this.setState({\r\n        selectArticle: id\r\n      });\r\n\r\n  \r\n\r\n    const indexOfLastArticle = currentPage * articlesPerPage;\r\n    const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\r\n    const currentArticles = articles.slice(indexOfFirstArticle, indexOfLastArticle);\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n      this.setState({\r\n        currentPage: pageNumber\r\n      });\r\n    };\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n       <div class=\"airplane\">\r\n        <img src=\"https://i.ibb.co/SPpRcJz/airplane.png\" />\r\n      <div class=\"smoke\"></div>\r\n      <div class=\"flame\"></div>\r\n      <div class=\"flame flame2\"></div>\r\n      </div>\r\n        <div>\r\n          <Container>\r\n            <Row>\r\n              <div className=\"card-column mt-3 test-cards\">\r\n                {currentArticles.map((article) => (\r\n                  <Card\r\n                    className=\"cards test-card\"\r\n                    style={{\r\n                      width: \"20rem\",\r\n                      minheight: \"25px\",\r\n                      cursor: 'pointer'\r\n                    }}\r\n                    key={article.index}\r\n                  >\r\n                    { <Card.Img style ={{height: \"200px\"}} variant=\"top\" src={article.Image ? article.Image : Image} className=\"img-fluid\" alt=\"Responsive image\" \r\n                    onClick={() =>{selectedArticle(article._id)}} /> }\r\n                    <Card.Body>\r\n                      <Card.Title \r\n                    onClick={() =>{selectedArticle(article._id)}} >\r\n                      {article.Title}\r\n                      </Card.Title>\r\n                      <Card.Text\r\n                        style={{\r\n                          cursor: 'pointer'\r\n                        }}\r\n                      >\r\n                        <p onClick={() => {openFullArticle(article._id)}} >\r\n                          {openArticle !== article._id? truncate(article.Summary): article.Summary}\r\n                        </p>\r\n                      </Card.Text>\r\n                    </Card.Body >\r\n                    <ListGroup className=\"list-group-flush\" \r\n                     >\r\n                     {selectArticle !== article._id? '':\r\n                       <ArticleDetails article={article} className=\"popupModal\"/>\r\n                     }\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >Written by:  {article.Author || 'none'}</ListGroup.Item>\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}}  >Read Time: {article.Read_Time} min</ListGroup.Item>\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >Date: {article.Date ? article.Date : 'NA'}</ListGroup.Item>\r\n                      <ListGroup.Item onClick={() =>{selectedArticle(article._id)}} >\r\n                      <div style={{textAlign: 'center'}}>\r\n                      <Button\r\n                        variant=\"primary\"\r\n                        style={{\r\n                          backgroundColor: \"darkgreen\",\r\n                          border: \"darkgreen 1px solid\",\r\n                        }}\r\n                        onClick={() =>{selectedArticle(article._id)}} >Read More\r\n                        {selectButton !== article._id? '': \r\n                          <ArticleDetails article={article} className=\"popupModal\" />\r\n                          \r\n                        } \r\n                      </Button> \r\n                      </div>\r\n                      </ListGroup.Item>\r\n                    </ListGroup>\r\n                    {/* <Card.Body className= \"card-actions\">\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        style={{\r\n                          backgroundColor: \"darkgreen\",\r\n                          border: \"darkgreen 1px solid\",\r\n                        }}\r\n                        onClick={() =>{selectedArticle(article._id)} }>\r\n                        {selectArticle !== article._id? 'Read More':\r\n                          <ArticleDetails article={article} className=\"popupModal\"/>\r\n                        } \r\n                      </Button> \r\n                      <Card.Link to={article.URL} className= \"card-link\" href={article.URL} target= \"_blank\">Link to article</Card.Link>\r\n                      </Card.Body> */}\r\n                   </Card> \r\n                ))}\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={handlePageChange}\r\n            totalArticles={articles.length}\r\n            articlesPerPage={articlesPerPage}\r\n          />\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n     \r\n  }\r\n}\r\n\r\nexport default AllCategories;\r\n"]},"metadata":{},"sourceType":"module"}