{"ast":null,"code":"var _jsxFileName = \"/mnt/c/capstone/connect/src/components/userSearchProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport NoteDetails from \"./NoteDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchProfile = props => {\n  _s();\n\n  console.log(props); // searchUser(searchTerm).then((result) => {\n  //   if (searchTerm) {\n  //   }\n  // });\n\n  const [openNote, setOpenNote] = useState(null);\n\n  const openFullNote = id => {\n    setOpenNote(id);\n  };\n\n  const {\n    responseData\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: responseData.picture,\n        alt: \"Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", responseData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), responseData.savedNotes ? responseData.savedNotes.map(note => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cards test-card\",\n        style: {\n          width: \"20rem\",\n          minheight: \"25px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: note.articleTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          style: {\n            backgroundColor: \"darkgreen\",\n            border: \"darkgreen 1px solid\"\n          },\n          onClick: () => openFullNote(note.id),\n          children: openNote !== note.id ? \"open Note\" : /*#__PURE__*/_jsxDEV(NoteDetails, {\n            note: note,\n            className: \"popupModal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)) : \"No saved notes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchProfile, \"QE7l9IdH1EzuhmIKYB0ur1y/lcM=\");\n\n_c = SearchProfile;\nexport default SearchProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchProfile\");","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/components/userSearchProfile.js"],"names":["React","useState","Card","Button","NoteDetails","SearchProfile","props","console","log","openNote","setOpenNote","openFullNote","id","responseData","picture","email","savedNotes","map","note","width","minheight","articleTitle","backgroundColor","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAF+B,CAI/B;AACA;AAEA;AACA;;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMU,YAAY,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,WAAW,CAACE,EAAD,CAAX;AACD,GAFD;;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAmBP,KAAzB;AAEA,sBACE;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEO,YAAY,CAACC,OAAvB;AAAgC,QAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,8BAAWD,YAAY,CAACE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGF,YAAY,CAACG,UAAb,GACCH,YAAY,CAACG,UAAb,CAAwBC,GAAxB,CAA6BC,IAAD,iBAC1B,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,SAAS,EAAE;AAFN,SAFT;AAAA,gCAQE,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaF,IAAI,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,SADV;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE,WADZ;AAELC,YAAAA,MAAM,EAAE;AAFH,WAFT;AAME,UAAA,OAAO,EAAE,MAAMZ,YAAY,CAACO,IAAI,CAACN,EAAN,CAN7B;AAAA,oBAQGH,QAAQ,KAAKS,IAAI,CAACN,EAAlB,GACC,WADD,gBAGC,QAAC,WAAD;AAAa,YAAA,IAAI,EAAEM,IAAnB;AAAyB,YAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA,SAMOA,IAAI,CAACN,EANZ;AAAA;AAAA;AAAA;AAAA,cADF,CADD,GA4BC,gBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAxDD;;GAAMP,a;;KAAAA,a;AA0DN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\n\r\nconst SearchProfile = (props) => {\r\n\r\n  console.log(props)\r\n  \r\n  // searchUser(searchTerm).then((result) => {\r\n  //   if (searchTerm) {\r\n\r\n  //   }\r\n  // });\r\n\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  const { responseData } = props;\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <img src={responseData.picture} alt=\"Profile Picture\" />\r\n        <p>Email: {responseData.email}</p>\r\n        {responseData.savedNotes ? (\r\n          responseData.savedNotes.map((note) => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\",\r\n              }}\r\n              key={note.id}\r\n            >\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{\r\n                  backgroundColor: \"darkgreen\",\r\n                  border: \"darkgreen 1px solid\",\r\n                }}\r\n                onClick={() => openFullNote(note.id)}\r\n              >\r\n                {openNote !== note.id ? (\r\n                  \"open Note\"\r\n                ) : (\r\n                  <NoteDetails note={note} className=\"popupModal\" />\r\n                )}\r\n              </Button>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          \"No saved notes\"\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProfile;\r\n"]},"metadata":{},"sourceType":"module"}