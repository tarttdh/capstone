{"ast":null,"code":"var _jsxFileName = \"/mnt/c/capstone/connect/src/archives/a_Gov.js\";\nimport React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Image from \"../components/Image.jpg\";\nimport \"../components/test-card.css\";\nimport ArticleDetails from '../ArticleDetails';\nimport Pagination from '../Pagination';\nimport { serverUrl } from \"./config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ArcGov extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      articles: [],\n      openArticle: -1,\n      selectArticle: -1,\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    const currentDate = new Date();\n    const threeMonthsAgo = new Date(currentDate.getFullYear(), currentDate.getMonth() - 3, 1); // set to the first day of 3 months ago\n\n    const startDate = new Date(1969, 0, 1); // set to January 1, 1969\n\n    fetch(`${serverUrl}/gov_articles/?format=json&Date__gte=${startDate.toISOString()}&Date__lt=${threeMonthsAgo.toISOString()}`).then(res => res.json()).then(result => {\n      // Sort the articles by date in descending order\n      result.sort((a, b) => new Date(b.Date) - new Date(a.Date));\n      this.setState({\n        isLoaded: true,\n        articles: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      articles,\n      selectArticle,\n      openArticle,\n      currentPage\n    } = this.state;\n    const articlesPerPage = 12; // number of articles to display per page\n\n    const truncate = input => (input === null || input === void 0 ? void 0 : input.length) > 300 ? `${input.substring(0, 254)}...` : input;\n\n    const openFullArticle = id => this.setState({\n      openArticle: id\n    });\n\n    const selectedArticle = id => this.setState({\n      selectArticle: id\n    });\n\n    const indexOfLastArticle = currentPage * articlesPerPage;\n    const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\n    const currentArticles = articles.slice(indexOfFirstArticle, indexOfLastArticle);\n\n    const handlePageChange = pageNumber => {\n      this.setState({\n        currentPage: pageNumber\n      });\n    };\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-column mt-3 test-cards\",\n              children: currentArticles.map(article => /*#__PURE__*/_jsxDEV(Card, {\n                className: \"cards test-card\",\n                style: {\n                  width: \"20rem\",\n                  minheight: \"25px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  style: {\n                    height: \"200px\"\n                  },\n                  variant: \"top\",\n                  src: article.Image ? article.Image : Image,\n                  className: \"img-fluid\",\n                  alt: \"Responsive image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: article.Title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      onClick: () => {\n                        openFullArticle(article._id);\n                      },\n                      children: openArticle !== article._id ? truncate(article.Summary) : article.Summary\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n                  className: \"list-group-flush\",\n                  children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    children: [\"Written by:  \", article.Author || 'none']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    children: [\"Read Time: \", article.Read_Time, \" min\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    children: [\"Date: \", article.Date ? article.Date : 'NA']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  className: \"card-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    style: {\n                      backgroundColor: \"darkgreen\",\n                      border: \"darkgreen 1px solid\"\n                    },\n                    onClick: () => {\n                      selectedArticle(article._id);\n                    },\n                    children: selectArticle !== article._id ? 'Read More' : /*#__PURE__*/_jsxDEV(ArticleDetails, {\n                      article: article,\n                      className: \"popupModal\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n                    to: article.URL,\n                    className: \"card-link\",\n                    href: article.URL,\n                    target: \"_blank\",\n                    children: \"Link to article\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)]\n              }, article.index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          currentPage: currentPage,\n          setCurrentPage: handlePageChange,\n          totalArticles: articles.length,\n          articlesPerPage: articlesPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\nexport default ArcGov;","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/archives/a_Gov.js"],"names":["React","Component","Card","Button","Container","Row","ListGroup","Image","ArticleDetails","Pagination","serverUrl","ArcGov","constructor","props","state","error","isLoaded","articles","openArticle","selectArticle","currentPage","componentDidMount","currentDate","Date","threeMonthsAgo","getFullYear","getMonth","startDate","fetch","toISOString","then","res","json","result","sort","a","b","setState","render","articlesPerPage","truncate","input","length","substring","openFullArticle","id","selectedArticle","indexOfLastArticle","indexOfFirstArticle","currentArticles","slice","handlePageChange","pageNumber","message","map","article","width","minheight","height","Title","cursor","_id","Summary","Author","Read_Time","backgroundColor","border","URL","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Image from \"../components/Image.jpg\";\r\nimport \"../components/test-card.css\";\r\nimport ArticleDetails from '../ArticleDetails';\r\nimport Pagination from '../Pagination';\r\nimport { serverUrl } from \"./config.js\";\r\n\r\nexport class ArcGov extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      articles: [],\r\n      openArticle: -1,\r\n      selectArticle: -1,\r\n      currentPage: 1\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const currentDate = new Date();\r\n    const threeMonthsAgo = new Date(currentDate.getFullYear(), currentDate.getMonth() - 3, 1); // set to the first day of 3 months ago\r\n    const startDate = new Date(1969, 0, 1); // set to January 1, 1969\r\n  \r\n    fetch(`${serverUrl}/gov_articles/?format=json&Date__gte=${startDate.toISOString()}&Date__lt=${threeMonthsAgo.toISOString()}`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          // Sort the articles by date in descending order\r\n          result.sort((a, b) => new Date(b.Date) - new Date(a.Date));\r\n  \r\n          this.setState({\r\n            isLoaded: true,\r\n            articles: result, \r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  \r\n\r\n\r\n  render() {\r\n    const { error, isLoaded, articles, selectArticle, openArticle, currentPage } = this.state;\r\n    const articlesPerPage = 12; // number of articles to display per page\r\n\r\n    const truncate = (input) =>\r\n      input?.length > 300 ? `${input.substring(0, 254)}...` : input;\r\n\r\n    const openFullArticle = (id) =>\r\n      this.setState({\r\n        openArticle: id\r\n      });\r\n\r\n    const selectedArticle = (id) =>\r\n      this.setState({\r\n        selectArticle: id\r\n      });\r\n\r\n    const indexOfLastArticle = currentPage * articlesPerPage;\r\n    const indexOfFirstArticle = indexOfLastArticle - articlesPerPage;\r\n    const currentArticles = articles.slice(indexOfFirstArticle, indexOfLastArticle);\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n      this.setState({\r\n        currentPage: pageNumber\r\n      });\r\n    };\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Container>\r\n            <Row>\r\n              <div className=\"card-column mt-3 test-cards\">\r\n                {currentArticles.map((article) => (\r\n                  <Card\r\n                    className=\"cards test-card\"\r\n                    style={{\r\n                      width: \"20rem\",\r\n                      minheight: \"25px\"\r\n                    }}\r\n                    key={article.index}\r\n                  >\r\n                    { <Card.Img style ={{height: \"200px\"}} variant=\"top\" src={article.Image ? article.Image : Image} className=\"img-fluid\" alt=\"Responsive image\" /> }\r\n                    <Card.Body>\r\n                      <Card.Title>{article.Title}</Card.Title>\r\n                      <Card.Text\r\n                        style={{\r\n                          cursor: 'pointer'\r\n                        }}\r\n                      >\r\n                        <p onClick={() => {openFullArticle(article._id)} }>\r\n                          {openArticle !== article._id? truncate(article.Summary): article.Summary}\r\n                        </p>\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                    <ListGroup className=\"list-group-flush\">\r\n                      <ListGroup.Item>Written by:  {article.Author || 'none'}</ListGroup.Item>\r\n                      <ListGroup.Item>Read Time: {article.Read_Time} min</ListGroup.Item>\r\n                      <ListGroup.Item>Date: {article.Date ? article.Date : 'NA'}</ListGroup.Item>\r\n                    </ListGroup>\r\n                    <Card.Body className= \"card-actions\">\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        style={{\r\n                          backgroundColor: \"darkgreen\",\r\n                          border: \"darkgreen 1px solid\",\r\n                        }}\r\n                        onClick={() =>{selectedArticle(article._id)} }>\r\n                        {selectArticle !== article._id? 'Read More':\r\n                          <ArticleDetails article={article} className=\"popupModal\"/>\r\n                        } \r\n                      </Button> \r\n                      <Card.Link to={article.URL} className= \"card-link\" href={article.URL} target= \"_blank\">Link to article</Card.Link>\r\n                    </Card.Body>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            </Row>\r\n          </Container>\r\n          <Pagination\r\n            currentPage={currentPage}\r\n            setCurrentPage={handlePageChange}\r\n            totalArticles={articles.length}\r\n            articlesPerPage={articlesPerPage}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ArcGov;\r\n"]},"metadata":{},"sourceType":"module"}