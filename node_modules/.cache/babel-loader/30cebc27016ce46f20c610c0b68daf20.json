{"ast":null,"code":"import _slicedToArray from\"/mnt/c/capstone/connect/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Card from\"react-bootstrap/Card\";import Button from\"react-bootstrap/Button\";import NoteDetails from\"./NoteDetails\";import searchUser from'../utils/searchUser';import Note from'./userSearchNotes';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchProfile=function SearchProfile(props){console.log(\"searchProfileProps \",props);var _useState=useState(),_useState2=_slicedToArray(_useState,2),responseData=_useState2[0],setResponseData=_useState2[1];var _userData;searchUser(props.searchTerm).then(function(result){console.log(\"Results\",result);_userData=result;setResponseData(result);});var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),openNote=_useState4[0],setOpenNote=_useState4[1];var openFullNote=function openFullNote(id){setOpenNote(id);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"main\",{children:[responseData&&/*#__PURE__*/_jsx(\"img\",{src:responseData.picture}),responseData&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",responseData.email]}),responseData&&responseData.savedNotes?responseData.savedNotes.map(function(note){return/*#__PURE__*/_jsxs(Card,{className:\"cards test-card\",style:{width:\"20rem\",minheight:\"25px\"},onClick:function onClick(){return openFullNote(note.id);},children:[/*#__PURE__*/_jsx(Card.Title,{children:note.articleTitle}),/*#__PURE__*/_jsx(Card.Footer,{children:openNote!==note.id?\"\":/*#__PURE__*/_jsx(Note,{note:note,className:\"popupModal\"})},note.id)]});}):\"No saved notes\"]})});};export default SearchProfile;","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/components/userSearchProfile.js"],"names":["React","useState","Card","Button","NoteDetails","searchUser","Note","SearchProfile","props","console","log","responseData","setResponseData","_userData","searchTerm","then","result","openNote","setOpenNote","openFullNote","id","picture","email","savedNotes","map","note","width","minheight","articleTitle"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAG/BC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmCF,KAAnC,EAEA,cAAwCP,QAAQ,EAAhD,wCAAOU,YAAP,eAAqBC,eAArB,eAEA,GAAIC,CAAAA,SAAJ,CAEAR,UAAU,CAACG,KAAK,CAACM,UAAP,CAAV,CAA6BC,IAA7B,CAAkC,SAACC,MAAD,CAAY,CAC5CP,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBM,MAAvB,EACAH,SAAS,CAAGG,MAAZ,CACAJ,eAAe,CAACI,MAAD,CAAf,CACD,CAJD,EAMA,eAAgCf,QAAQ,CAAC,IAAD,CAAxC,yCAAOgB,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAQ,CAC3BF,WAAW,CAACE,EAAD,CAAX,CACD,CAFD,CAMA,mBACE,kCACE,wBAECT,YAAY,eACZ,YAAK,GAAG,CAAEA,YAAY,CAACU,OAAvB,EAHD,CAKGV,YAAY,eACd,+BAAWA,YAAY,CAACW,KAAxB,GAND,CAQGX,YAAY,EAAIA,YAAY,CAACY,UAA7B,CACCZ,YAAY,CAACY,UAAb,CAAwBC,GAAxB,CAA4B,SAACC,IAAD,qBAC1B,MAAC,IAAD,EACE,SAAS,CAAC,iBADZ,CAEE,KAAK,CAAE,CACLC,KAAK,CAAE,OADF,CAELC,SAAS,CAAE,MAFN,CAFT,CAOE,OAAO,CAAE,yBAAMR,CAAAA,YAAY,CAACM,IAAI,CAACL,EAAN,CAAlB,EAPX,wBASE,KAAC,IAAD,CAAM,KAAN,WAAaK,IAAI,CAACG,YAAlB,EATF,cAUE,KAAC,IAAD,CAAM,MAAN,WAGCX,QAAQ,GAAKQ,IAAI,CAACL,EAAlB,CACG,EADH,cAGG,KAAC,IAAD,EAAM,IAAI,CAAEK,IAAZ,CAAkB,SAAS,CAAC,YAA5B,EANJ,EACKA,IAAI,CAACL,EADV,CAVF,GAD0B,EAA5B,CADD,CA0BC,gBAlCJ,GADF,EADF,CA2CD,CAlED,CAoEA,cAAeb,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\nimport searchUser from '../utils/searchUser';\r\nimport Note from './userSearchNotes';\r\n\r\nconst SearchProfile = (props) => {\r\n\r\n\r\n  console.log(\"searchProfileProps \", props)\r\n\r\n  const [responseData, setResponseData] = useState()\r\n    \r\n  let _userData;\r\n  \r\n  searchUser(props.searchTerm).then((result) => {\r\n    console.log(\"Results\", result)\r\n    _userData = result;\r\n    setResponseData(result);\r\n  })\r\n\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n\r\n      {responseData &&\r\n       <img src={responseData.picture} />}\r\n\r\n        {responseData &&\r\n       <p>Email: {responseData.email}</p>}\r\n      \r\n        {responseData && responseData.savedNotes ? (\r\n          responseData.savedNotes.map((note) => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\",\r\n\r\n              }}\r\n              onClick={() => openFullNote(note.id)}\r\n              >\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              <Card.Footer \r\n              key={note.id}\r\n              >\r\n              {openNote !== note.id ? (\r\n                  \"\"\r\n                ) : (\r\n                  <Note note={note} className=\"popupModal\" />\r\n                )}\r\n              </Card.Footer>\r\n              \r\n            </Card>\r\n        \r\n          ))\r\n        ) : (\r\n          \"No saved notes\"\r\n        )}\r\n        \r\n      \r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProfile;\r\n"]},"metadata":{},"sourceType":"module"}