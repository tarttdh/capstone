{"ast":null,"code":"var _jsxFileName = \"/mnt/c/capstone/connect/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport NoteDetails from \"./NoteDetails\";\nimport { serverUrl } from \"../config.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    user,\n    isAuthenticated\n  } = useAuth0();\n  const [responseData, setResponseData] = useState(null);\n  const [openNote, setOpenNote] = useState(null);\n\n  const openFullNote = id => {\n    setOpenNote(id);\n  };\n\n  const fetchData = async () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": `${user.email}`\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    try {\n      const response = await fetch(`${serverUrl}/user/`, requestOptions);\n      const result = await response.json();\n      setResponseData(result);\n    } catch (error) {\n      console.log('error', error);\n      setResponseData(null);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to see your profile information.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  return responseData ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/edit_profile\",\n              children: \"Edit Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: responseData.picture,\n        alt: \"Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", responseData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), responseData.savedNotes ? responseData.savedNotes.map(note => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cards test-card\",\n        style: {\n          width: \"20rem\",\n          minheight: \"25px\"\n        },\n        onClick: () => openFullNote(note.id),\n        children: [openNote !== note.id ? \"open Note\" : /*#__PURE__*/_jsxDEV(NoteDetails, {\n          note: note,\n          className: \"popupModal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 53\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: note.articleTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)) : \"No saved saved Articles\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Profile, \"NxR4WRbS5Na/3hTSJ25qQuTbAo8=\", false, function () {\n  return [useAuth0];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/components/Profile.js"],"names":["React","useState","useEffect","useAuth0","Card","Button","NoteDetails","serverUrl","Profile","user","isAuthenticated","responseData","setResponseData","openNote","setOpenNote","openFullNote","id","fetchData","myHeaders","Headers","append","raw","JSON","stringify","email","requestOptions","method","headers","body","redirect","response","fetch","result","json","error","console","log","picture","savedNotes","map","note","width","minheight","articleTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth0 } from '@auth0/auth0-react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\nimport { serverUrl } from \"../config.js\";\r\n\r\nconst Profile = () => {\r\n\r\n  const { user, isAuthenticated } = useAuth0();\r\n\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      \"email\": `${user.email}`\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(`${serverUrl}/user/`, requestOptions);\r\n      const result = await response.json();\r\n      setResponseData(result);\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      setResponseData(null);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>Please log in to see your profile information.</div>;\r\n  }\r\n\r\n  return responseData ? (\r\n    <div>\r\n      <header>\r\n        <nav>\r\n          <ul>\r\n            <li><a href=\"/edit_profile\">Edit Profile</a></li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        <img src={responseData.picture} alt=\"Profile Picture\" />\r\n        <p>Email: {responseData.email}</p>\r\n        {responseData.savedNotes\r\n          ? responseData.savedNotes.map(note => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\"\r\n              }}\r\n              key={note.id}\r\n              onClick={() => openFullNote(note.id)}\r\n            >\r\n              {openNote !== note.id ? \"open Note\" : <NoteDetails note={note} className=\"popupModal\" />}\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              {/* <Button\r\n                variant=\"primary\"\r\n                style={{\r\n                  backgroundColor: \"darkgreen\",\r\n                  border: \"darkgreen 1px solid\",\r\n                }}\r\n                onClick={() => openFullNote(note.id)}\r\n              >\r\n                {openNote !== note.id ? \"open Note\" : <NoteDetails note={note} className=\"popupModal\" />}\r\n              </Button> */}\r\n            </Card>\r\n          ))\r\n          : \"No saved saved Articles\"}\r\n      </main>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}