{"ast":null,"code":"import _slicedToArray from\"/mnt/c/capstone/connect/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import Card from\"react-bootstrap/Card\";import Button from\"react-bootstrap/Button\";import NoteDetails from\"./NoteDetails\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SearchProfile=function SearchProfile(props){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),openNote=_useState2[0],setOpenNote=_useState2[1];var openFullNote=function openFullNote(id){setOpenNote(id);};var responseData=props.responseData;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(\"img\",{src:responseData.picture,alt:\"Profile Picture\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Email: \",responseData.email]}),responseData.savedNotes?responseData.savedNotes.map(function(note){return/*#__PURE__*/_jsxs(Card,{className:\"cards test-card\",style:{width:\"20rem\",minheight:\"25px\"},children:[/*#__PURE__*/_jsx(Card.Title,{children:note.articleTitle}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",style:{backgroundColor:\"darkgreen\",border:\"darkgreen 1px solid\"},onClick:function onClick(){return openFullNote(note.id);},children:openNote!==note.id?\"open Note\":/*#__PURE__*/_jsx(NoteDetails,{note:note,className:\"popupModal\"})})]},note.id);}):\"No saved notes\"]})});};export default SearchProfile;","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/components/userSearchProfile.js"],"names":["React","useState","Card","Button","NoteDetails","SearchProfile","props","openNote","setOpenNote","openFullNote","id","responseData","picture","email","savedNotes","map","note","width","minheight","articleTitle","backgroundColor","border"],"mappings":"6GAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC/B,cAAgCL,QAAQ,CAAC,IAAD,CAAxC,wCAAOM,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAQ,CAC3BF,WAAW,CAACE,EAAD,CAAX,CACD,CAFD,CAIA,GAAQC,CAAAA,YAAR,CAAyBL,KAAzB,CAAQK,YAAR,CAEA,mBACE,kCACE,qCACE,YAAK,GAAG,CAAEA,YAAY,CAACC,OAAvB,CAAgC,GAAG,CAAC,iBAApC,EADF,cAEE,+BAAWD,YAAY,CAACE,KAAxB,GAFF,CAGGF,YAAY,CAACG,UAAb,CACCH,YAAY,CAACG,UAAb,CAAwBC,GAAxB,CAA4B,SAACC,IAAD,qBAC1B,MAAC,IAAD,EACE,SAAS,CAAC,iBADZ,CAEE,KAAK,CAAE,CACLC,KAAK,CAAE,OADF,CAELC,SAAS,CAAE,MAFN,CAFT,wBAQE,KAAC,IAAD,CAAM,KAAN,WAAaF,IAAI,CAACG,YAAlB,EARF,cASE,KAAC,MAAD,EACE,OAAO,CAAC,SADV,CAEE,KAAK,CAAE,CACLC,eAAe,CAAE,WADZ,CAELC,MAAM,CAAE,qBAFH,CAFT,CAME,OAAO,CAAE,yBAAMZ,CAAAA,YAAY,CAACO,IAAI,CAACN,EAAN,CAAlB,EANX,UAQGH,QAAQ,GAAKS,IAAI,CAACN,EAAlB,CACC,WADD,cAGC,KAAC,WAAD,EAAa,IAAI,CAAEM,IAAnB,CAAyB,SAAS,CAAC,YAAnC,EAXJ,EATF,GAMOA,IAAI,CAACN,EANZ,CAD0B,EAA5B,CADD,CA4BC,gBA/BJ,GADF,EADF,CAsCD,CA/CD,CAiDA,cAAeL,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\n\r\nconst SearchProfile = (props) => {\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  const { responseData } = props;\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <img src={responseData.picture} alt=\"Profile Picture\" />\r\n        <p>Email: {responseData.email}</p>\r\n        {responseData.savedNotes ? (\r\n          responseData.savedNotes.map((note) => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\",\r\n              }}\r\n              key={note.id}\r\n            >\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              <Button\r\n                variant=\"primary\"\r\n                style={{\r\n                  backgroundColor: \"darkgreen\",\r\n                  border: \"darkgreen 1px solid\",\r\n                }}\r\n                onClick={() => openFullNote(note.id)}\r\n              >\r\n                {openNote !== note.id ? (\r\n                  \"open Note\"\r\n                ) : (\r\n                  <NoteDetails note={note} className=\"popupModal\" />\r\n                )}\r\n              </Button>\r\n            </Card>\r\n          ))\r\n        ) : (\r\n          \"No saved notes\"\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProfile;\r\n"]},"metadata":{},"sourceType":"module"}