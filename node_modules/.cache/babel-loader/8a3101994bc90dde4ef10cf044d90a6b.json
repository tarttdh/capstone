{"ast":null,"code":"var _jsxFileName = \"/mnt/c/capstone/connect/src/components/userSearchProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport NoteDetails from \"./NoteDetails\";\nimport searchUser from '../utils/searchUser';\nimport Note from './userSearchNotes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchProfile = props => {\n  _s();\n\n  console.log(\"searchProfileProps \", props);\n  const [responseData, setResponseData] = useState();\n\n  let _userData;\n\n  searchUser(props.searchTerm).then(result => {\n    console.log(\"Results\", result);\n    _userData = result;\n    setResponseData(result);\n  });\n  const [openNote, setOpenNote] = useState(null);\n\n  const openFullNote = id => {\n    setOpenNote(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [responseData && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: responseData.picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this), responseData && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", responseData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 8\n      }, this), responseData && responseData.savedNotes ? responseData.savedNotes.map(note => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"cards test-card\",\n        style: {\n          width: \"20rem\",\n          minheight: \"25px\"\n        },\n        onClick: () => openFullNote(note.id),\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: note.articleTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: openNote !== note.id ? \"\" : /*#__PURE__*/_jsxDEV(Note, {\n            note: note,\n            className: \"popupModal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)\n        }, note.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : \"No saved notes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchProfile, \"sv5qBtMOZn8Q5Jo5Qbx0UEdbIpA=\");\n\n_c = SearchProfile;\nexport default SearchProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchProfile\");","map":{"version":3,"sources":["/mnt/c/capstone/connect/src/components/userSearchProfile.js"],"names":["React","useState","Card","Button","NoteDetails","searchUser","Note","SearchProfile","props","console","log","responseData","setResponseData","_userData","searchTerm","then","result","openNote","setOpenNote","openFullNote","id","picture","email","savedNotes","map","note","width","minheight","articleTitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAG/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AAEA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;;AAEA,MAAIY,SAAJ;;AAEAR,EAAAA,UAAU,CAACG,KAAK,CAACM,UAAP,CAAV,CAA6BC,IAA7B,CAAmCC,MAAD,IAAY;AAC5CP,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBM,MAAvB;AACAH,IAAAA,SAAS,GAAGG,MAAZ;AACAJ,IAAAA,eAAe,CAACI,MAAD,CAAf;AACD,GAJD;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMkB,YAAY,GAAIC,EAAD,IAAQ;AAC3BF,IAAAA,WAAW,CAACE,EAAD,CAAX;AACD,GAFD;;AAMA,sBACE;AAAA,2BACE;AAAA,iBAECT,YAAY,iBACZ;AAAK,QAAA,GAAG,EAAEA,YAAY,CAACU;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHD,EAKGV,YAAY,iBACd;AAAA,8BAAWA,YAAY,CAACW,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,EAQGX,YAAY,IAAIA,YAAY,CAACY,UAA7B,GACCZ,YAAY,CAACY,UAAb,CAAwBC,GAAxB,CAA6BC,IAAD,iBAC1B,QAAC,IAAD;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,SAAS,EAAE;AAFN,SAFT;AAOE,QAAA,OAAO,EAAE,MAAMR,YAAY,CAACM,IAAI,CAACL,EAAN,CAP7B;AAAA,gCASE,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaK,IAAI,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,IAAD,CAAM,MAAN;AAAA,oBAGCX,QAAQ,KAAKQ,IAAI,CAACL,EAAlB,GACG,EADH,gBAGG,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEK,IAAZ;AAAkB,YAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AANJ,WACKA,IAAI,CAACL,EADV;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADD,GA0BC,gBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAlED;;GAAMb,a;;KAAAA,a;AAoEN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NoteDetails from \"./NoteDetails\";\r\nimport searchUser from '../utils/searchUser';\r\nimport Note from './userSearchNotes';\r\n\r\nconst SearchProfile = (props) => {\r\n\r\n\r\n  console.log(\"searchProfileProps \", props)\r\n\r\n  const [responseData, setResponseData] = useState()\r\n    \r\n  let _userData;\r\n  \r\n  searchUser(props.searchTerm).then((result) => {\r\n    console.log(\"Results\", result)\r\n    _userData = result;\r\n    setResponseData(result);\r\n  })\r\n\r\n  const [openNote, setOpenNote] = useState(null);\r\n\r\n  const openFullNote = (id) => {\r\n    setOpenNote(id);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n\r\n      {responseData &&\r\n       <img src={responseData.picture} />}\r\n\r\n        {responseData &&\r\n       <p>Email: {responseData.email}</p>}\r\n      \r\n        {responseData && responseData.savedNotes ? (\r\n          responseData.savedNotes.map((note) => (\r\n            <Card\r\n              className=\"cards test-card\"\r\n              style={{\r\n                width: \"20rem\",\r\n                minheight: \"25px\",\r\n\r\n              }}\r\n              onClick={() => openFullNote(note.id)}\r\n              >\r\n              <Card.Title>{note.articleTitle}</Card.Title>\r\n              <Card.Footer \r\n              key={note.id}\r\n              >\r\n              {openNote !== note.id ? (\r\n                  \"\"\r\n                ) : (\r\n                  <Note note={note} className=\"popupModal\" />\r\n                )}\r\n              </Card.Footer>\r\n              \r\n            </Card>\r\n        \r\n          ))\r\n        ) : (\r\n          \"No saved notes\"\r\n        )}\r\n        \r\n      \r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchProfile;\r\n"]},"metadata":{},"sourceType":"module"}